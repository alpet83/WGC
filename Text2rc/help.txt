[Возможности]
\n
 Программа WGC.\n
\n
   WinnerGameCheater (wgc) является самой скоростной программой для взлома игр.
 В его возможностях:\n
 - одновременный поиск или отсев нескольких значений\n
 - поиск машинных комманд изменяющих какого-либо значения\n
 - возможность работы изнутри игры. Не нужно переключаться из игры в программу\n
 - всплытие практически из любой программы.\n
 - быстрый ввод чит-кода по нажатию горячей клавиши\n
 Описание новых функций может отсутствовать в справке, поэтому желательно\n
 прочесть файл readme.txt, в котором они описываются\n
[end]
\n
[GameView]
\n
 GameView.\n
\n
   Для упрощения работы с несколькими запросами в программу встроен просмотр игрового поля. 
 Если во время игры нажать Win+PrintScr или клавиши всплытия WGC(Ctrl-PageUp), то экран игры 
 будет сохранен и его можно будет просматривать на вкладке 2.\n
   Поскольку отражается лишь часть скриншота, его можно перемещать мышью, для того что-бы
 выделить нужную часть экрана игры. Двойным щелчком можно посмотреть весь скриншот.\n
[end]
\n
[Консоль]
\n
Консольный режим.\n
\n
 WGC позволяет искать и изменять значения без переключения из игры.\n
\n
    Для этого надо использовать консольный режим, в котором можно вводить
 запрос на поиск/отсев или выполнять различные комманды.\n
 Для вызова консоли для поиска/отсева во время игры, надо нажимать
 Ctrl-F11/Ctrl-F12 соответственно, или переназначенные в настройках клавиши.\n
 При этом можно задавать тип значения, образец и правило поиска.
 Тип значения может быть обозначен буквой или словом из следующих вариантов:
 b byte, w word, d dword, t text, wd wide, s single, r real, db double, e extended, a all\n
 Условия поиска те же что и в меню: = > < <> * + - += -= +- ?\n
 Пример запроса: \"b = 123\" эквивалентно \"byte = 123\"\n
 Тип all подразумевает поиск значений неизвестного типа.
 Из-за применения текстовых значений, условие может быть при этом только =.\n
 Пример запроса: a = 234\n
    Если не надо изменять тип значений или правило поиска, вводиться только число. 
 Для поиска неизвестных значений изменять можно только правило (например ? или +-).
 После ввода запроса сразу начнется поиск или отсев.\n
\n
 В консоли есть также коммандный режим. Он вызывается нажатием клавиш Alt-F10.\n
 \n
 Комманды консоли:\n
 add - добавление найденых указателей в таблицу\n
 cheat - перезапись значений (как при нажатии кнопки Cheat).\n
 clear - очистка таблицы значений.\n
 close - закрытие окна консоли.\n
 list - вывод чит-кодов в консоль.\n
 set - установка значения, комманда имеет два параметра: номер строки таблицы и
 нужное значение, например \"set 2 1000000\", перезаписывает значение находящееся
 в строке 2.\n
 table - Просмотр таблицы значений, помогает выбрать подходящее значение для 
 изменения.\n
\n
    В динамичных играх (стрелялках) окно консоли может пропадать, или даже не появится 
 совсем. В этих случаях иногда помогает нажатие Ctrl+Shift, но вообще в таких играх
 лучше не пользоваться консолью, поскольку сильно замедляется сам процесс поиска.\n
\n 
[end]
\n
\n
[Использование отладчика]
\n
      Встроенный отладчик WGC\n
\n
   Чтобы не искать каждый раз, какое либо значение (и вообще не загружать wgc), можно
 изготовить патч или трейнер. Для этого в программу встроена поддержка аппаратной отладки.
 Ее возможности сводятся к установке точки прерывания на адреса данных и кода. В первом
 случае можно определить, по какому адресу находится команда, которая обращается к данным
 находящимся по этому адресу. Во втором, обращается ли процессор к команде по этому адресу.\n
   Замечу что WGC не предназначен для взлома защиты программы то копирования, и обхода
 ограничений trial версий. Он использует стандартные средства отладки Windows и не может
 подобраться к процессам, которые легко защищаются стандартными же средствами WinAPI32.\n
   В любом случае как и при использовании любого другого отладчика, вся ответственность
 за совершаемые действия ложатся на пользователя. В принципе если вы разрабатываете, какую
 либо защиту программ, wgc можно использовать для тестирования этой защиты.\n
   В отладчике wgc можно установить до четырех точек прерывания (используя четыре регистра
 отладки). Для этого надо выбрать условие, которое задается флажками (W R C), где W (write)
 означает точку прерывания на изменение данных по указанному адресу, R (read) на обращение к'
 данным, C (call) на выполнение команды. Адрес можно извлечь из вкладки Cheat с помощью
 кнопки \">> Debug\", или набрать вручную.\n
\n
    Например, найдено число денег в игре по адресу $588371. Этот адрес вводится в поле первой
 точки прерывания, напротив поля устанавливается флажок W. После чего нажимается кнопка
 Breakpoints, и адрес передается в контекст процесса. Можно переключится в игру, и изменить
 значение, потратив немного денег. Переключившись в окно отладчика можно увидеть, что найдено
 несколько адресов. Можно практически сразу определить искомый, для чего раскрываются все
 адреса, и просматривается характер изменения данных. Последние десять значений, которые
 записывает команда, находятся в узле ALL. Количество срабатываний команды в узле CNT.\n
\n
    После того как найден искомый адрес, можно посмотреть какие байты кода располагаются
 по этому адресу - сделать дамп памяти. Эти байты потом с помощью hview (qview) находятся
 в исполняемом файле, после чего просматривается дизассемблированный код программы.\n
    Найденый адрес указывает на команду следующую за той которая изменяет или обращается к данным.
 Поэтому нужно всего лишь проанализировать логику изменения данных, и исправить ее.\n
   Типичный пример:\n
   1. mov eax, [ds:087723h + edi]\n
   2. sub eax, ecx\n
   3. mov [ds:87723h + edi], eax\n
   Команда что изменила значение денег находится на третьей строчке, а изменить лучше всего ту что
 находится на второй, например на \"add eax, ecx\", после чего игра будет вам справедливо
 доплачивать за каждую покупку ;-). Конечно если игра сетевая или разработчик постарался ее защитить
 так просто ничего не выйдет.\n
   В отладчике есть дополнительные флажки:\n
   Handle Events - заставляет обрабатывать исключения.\n
   Останов - при срабатывании точки прерывания отладчик приостанавливает программу до нажатия
   кнопки Run или Ctrl-F9.\n
   Лог трассировки - при срабатывании точки прерывания в Messages записывается его адрес, и
   содержимое регистров.\n
\n
   Вопросы и пожелания по работе отладчика отправляйте мне на мыло: alpet@hotmail.ru
\n
[end]
\n
[Чит-коды]
\n
    Быстрый ввод чит-кодов\n
\n
   Если нет желания запоминать и каждый раз вводить чит-коды, достаточно их описать в окне
 чит-кодов (открывается с первой вкладки, кнопкой \"Чит-коды\"). Переключившись в игре, в режим
 ввода чит-кода, нажми Win+F12 (можно переназначить), потом клавишу с номером чит-кода
 (1..9, на обычной, не цифровой части клавитуры) и он будет вставлен. В некоторых играх (типа Starcraft) для ввода чит-кода
 надо дважды нажать ENTER (до и после ввода), что-бы это делал wgc установите флажок AutoEnter.\n
 В строке чит кода могут быть следующие коммандные символы:\n
  \\n - эмуляция нажатия ENER\n
  \\t - эмуляция нажатия TAB\n
  \\r - переключение на русскую раскладку\n
  \\e - переключение на английскую раскладку\n
  \\x??? - нажатие произвольной клавиши, с hex кодом ??. Первый полубайт означает:\n
      1 - нажатие клавиши\n
      2 - отпускание клавиши\n
      3 - нажатие и отпускание клавиши\n
  Например \\x35B - вызов меню Пуск.'\n
\n
[end]
\n
[Руководство читера]
\n
    Руководство взломщика\n
\n
 1. Поиск и изменение значений\n
\n
 1.1 Выбор процесса.
\r\n
   На первой вкладке программы, надо выбрать окно которое наиболее подходит к игре которую вы собираетесь взломать. Достаточно щеклнуть это окно в списке мышью и вы попадаете
 на вкладку \"2. Поиск и отсев\"\n
\r\n
 1.2 Поиск и отсев значений\n
\n

 Для начала в игре узнаем нужное значение (образец поиска), и переходим в WGC.
 Это значение следует поместить в поле \"min\". Правее этого поля находится кнопка выбора
 алгоритма поиска/отсева.\n
 Если кликнуть ее правой кнопкой мышы, развернется меню вариантов поиска/отсева\n
  Варианты поиска известных чисел.\n
   \">\"   Поиск числа больше, чем образец\n
   \"<\"   Поиск числа меньше, чем образец\n
   \"=\"   Поиск числа равного образцу\n
   \">=\"   Поиск числа не меньше, чем образец\n
   \"<=\"   Поиск числа не больше, чем образец\n
   \"<>\"   Поиск числа не равного образцу\n
 Варианты поиска неизвестного значения (подменю).\n
\n
   \"?\"    - Значение не изменилось\n
   \"+\"    - Значение увеличилось\n
   \"-\"    - Значение уменьшилось\n
   \"+-\"   - Значение изменилось\n
   \"+=\"   - Значение возможно увеличилось\n
   \"-=\"   - Значение возможно уменьшилось\n
\n
   Для поиска уже известного значения выбираем \"=\".\n
 Правее поля max находится кнопка выбора типа значения, у нее таким же способом открывается
 меню типов значения. Возможен поиск следующих типов:\n
 BYTE - целое число от 0 до 255 или от -128 до 127\n
 WORD - целое число от 0 до 65536 или от -32768 до 32767\n
 DWORD - целое число от 0 до 1^32 или от -1^31 до (1^31-1) 1^32= 4294967296\n
 TEXT - строка однобайтных символов\n
 WIDE - строка символов UNICODE\n
 SINGLE - вещественное (с плавающей запятой) число одинарной точности (4-байта)\n
 REAL - вещественное число 6-байт\n
 DOUBLE - вещественное число двойной точности (8-байт)\n
 EXTENDED - вещественное число расширенной точности (10-байт)\n
 ALL - число неизвестного типа (поиск сразу по нескольким типам)\n
   В большинстве игр используются целые числа, поэтому можно выбрать тип DWORD или WORD (Однобайтные значения\n
 встречаются редко).\n
   Когда выбрано условие поиска и тип искомых значений - нажимаем \"Поиск\". Надпись \"Готов\"
 на некоторое время сменится на \"Работа\", а когда вернется в исходное состояние в списке
 запросов будет отражаться количество найденых адресов, если конечно что-то найдено, в
 противном случае надо попытаться изменить тип значения или условия поиска.\n
    Если найдено много адресов (>5) в игре нужно изменить искомое значение
 (например потратить взламываемый ресурс). Возвратившись в программу изменяем значение образца (min)
 чтобы оно соответсвовало текущему значению в игре (это можно сделать одной мышью, наведя курсор
 на значение и подкручивая колесо, если при этом удерживать левую кнопку значение будет изменяться
 на 10 * Dx) и нажимаем \"Отсев\". После этого шага количество найденых значений должно существенно
 уменьшится - поэтому продолжаем его до тех пор это количество не прекратит уменьшаться, или не
 обратиться в ноль. Если после отсевов сохранилось несколько значений, их нужно передать в
 следующую вкладку нажав кнопку >>.\n
 \n
   Переходим к следующей вкладке \"3. Cheat\". Отсюда можно изменять и замораживать найденые
 значения. Нужное вам значение поместите в столбце \"cheat\" и строке которая соответствует
 найденому адресу, если найдено не одно значение используйте несколько разных - в игре
 проявится единственное. Для того чтобы значения перезаписались достаточно нажать Cheat\n.
   Можно использовать суффиксы для больших чисел:\n
   h - добавляет 2 нуля, например 1h = 100\n
   t - добавляет 3 нуля, например 2t = 2000\n
   m - добавляет 6 нулей, например 1m = 100000\n
   b - добавляет 9 нулей, например 1b = 1000000000\n
   Суффиксы ставятся в конце или середине числа.\n  
   Вышеописаная методика проста и универсальна для всех взломщиков игр, непозволяет однако работать
 с зашифрованными значениями. В некоторых случаях помогает поиск {неизвестного значения}.
   Но бывает когда значение прекрасно находится, но изменить его никак нельзя. Для этих и
 аналогичных случаев и требуется моя программа.  При всем при этом хочу сразу предупредить - Wgc
 сам ничего за вас не взломает, он только найдет места в программе откуда изменяется значение.\n
   Что бы взломать этот код придется использовать специальные программки, вроде HVIEW (я сам пользую
 qview). Также нужны хотя-бы базовые знания взломщика, знание ассемблера x86 обязательно.\n
   Как осуществить сложный взлом смотрите в разделе \"Использование Отладчика\".\n
[end]
\n                                                                                
HELPISEND