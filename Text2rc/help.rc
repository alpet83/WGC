STRINGTABLE LOADONCALL DISCARDABLE
BEGIN
13000, "[Возможности]"
13001, "\n"
13002, " Программа WGC.\n"
13003, "\n"
13004, "   WinnerGameCheater (wgc) является самой скоростной программой для взлома игр."
13005, " В его возможностях:\n"
13006, " - одновременный поиск или отсев нескольких значений\n"
13007, " - поиск машинных комманд изменяющих какого-либо значения\n"
13008, " - возможность работы изнутри игры. Не нужно переключаться из игры в программу\n"
13009, " - всплытие практически из любой программы.\n"
13010, " - быстрый ввод чит-кода по нажатию горячей клавиши\n"
13011, " Описание новых функций может отсутствовать в справке, поэтому желательно\n"
13012, " прочесть файл readme.txt, в котором они описываются\n"
13013, "[end]"
13014, "\n"
13015, "[GameView]"
13016, "\n"
13017, " GameView.\n"
13018, "\n"
13019, "   Для упрощения работы с несколькими запросами в программу встроен просмотр игрового поля. "
13020, " Если во время игры нажать Win+PrintScr или клавиши всплытия WGC(Ctrl-PageUp), то экран игры "
13021, " будет сохранен и его можно будет просматривать на вкладке 2.\n"
13022, "   Поскольку отражается лишь часть скриншота, его можно перемещать мышью, для того что-бы"
13023, " выделить нужную часть экрана игры. Двойным щелчком можно посмотреть весь скриншот.\n"
13024, "[end]"
13025, "\n"
13026, "[Консоль]"
13027, "\n"
13028, "Консольный режим.\n"
13029, "\n"
13030, " WGC позволяет искать и изменять значения без переключения из игры.\n"
13031, "\n"
13032, "    Для этого надо использовать консольный режим, в котором можно вводить"
13033, " запрос на поиск/отсев или выполнять различные комманды.\n"
13034, " Для вызова консоли для поиска/отсева во время игры, надо нажимать"
13035, " Ctrl-F11/Ctrl-F12 соответственно, или переназначенные в настройках клавиши.\n"
13036, " При этом можно задавать тип значения, образец и правило поиска."
13037, " Тип значения может быть обозначен буквой или словом из следующих вариантов:"
13038, " b byte, w word, d dword, t text, wd wide, s single, r real, db double, e extended, a all\n"
13039, " Условия поиска те же что и в меню: = > < <> * + - += -= +- ?\n"
13040, " Пример запроса: \"b = 123\" эквивалентно \"byte = 123\"\n"
13041, " Тип all подразумевает поиск значений неизвестного типа."
13042, " Из-за применения текстовых значений, условие может быть при этом только =.\n"
13043, " Пример запроса: a = 234\n"
13044, "    Если не надо изменять тип значений или правило поиска, вводиться только число. "
13045, " Для поиска неизвестных значений изменять можно только правило (например ? или +-)."
13046, " После ввода запроса сразу начнется поиск или отсев.\n"
13047, "\n"
13048, " В консоли есть также коммандный режим. Он вызывается нажатием клавиш Alt-F10.\n"
13049, " \n"
13050, " Комманды консоли:\n"
13051, " add - добавление найденых указателей в таблицу\n"
13052, " cheat - перезапись значений (как при нажатии кнопки Cheat).\n"
13053, " clear - очистка таблицы значений.\n"
13054, " close - закрытие окна консоли.\n"
13055, " list - вывод чит-кодов в консоль.\n"
13056, " set - установка значения, комманда имеет два параметра: номер строки таблицы и"
13057, " нужное значение, например \"set 2 1000000\", перезаписывает значение находящееся"
13058, " в строке 2.\n"
13059, " table - Просмотр таблицы значений, помогает выбрать подходящее значение для "
13060, " изменения.\n"
13061, "\n"
13062, "    В динамичных играх (стрелялках) окно консоли может пропадать, или даже не появится "
13063, " совсем. В этих случаях иногда помогает нажатие Ctrl+Shift, но вообще в таких играх"
13064, " лучше не пользоваться консолью, поскольку сильно замедляется сам процесс поиска.\n"
13065, "\n "
13066, "[end]"
13067, "\n"
13068, "\n"
13069, "[Использование отладчика]"
13070, "\n"
13071, "      Встроенный отладчик WGC\n"
13072, "\n"
13073, "   Чтобы не искать каждый раз, какое либо значение (и вообще не загружать wgc), можно"
13074, " изготовить патч или трейнер. Для этого в программу встроена поддержка аппаратной отладки."
13075, " Ее возможности сводятся к установке точки прерывания на адреса данных и кода. В первом"
13076, " случае можно определить, по какому адресу находится команда, которая обращается к данным"
13077, " находящимся по этому адресу. Во втором, обращается ли процессор к команде по этому адресу.\n"
13078, "   Замечу что WGC не предназначен для взлома защиты программы то копирования, и обхода"
13079, " ограничений trial версий. Он использует стандартные средства отладки Windows и не может"
13080, " подобраться к процессам, которые легко защищаются стандартными же средствами WinAPI32.\n"
13081, "   В любом случае как и при использовании любого другого отладчика, вся ответственность"
13082, " за совершаемые действия ложатся на пользователя. В принципе если вы разрабатываете, какую"
13083, " либо защиту программ, wgc можно использовать для тестирования этой защиты.\n"
13084, "   В отладчике wgc можно установить до четырех точек прерывания (используя четыре регистра"
13085, " отладки). Для этого надо выбрать условие, которое задается флажками (W R C), где W (write)"
13086, " означает точку прерывания на изменение данных по указанному адресу, R (read) на обращение к'"
13087, " данным, C (call) на выполнение команды. Адрес можно извлечь из вкладки Cheat с помощью"
13088, " кнопки \">> Debug\", или набрать вручную.\n"
13089, "\n"
13090, "    Например, найдено число денег в игре по адресу $588371. Этот адрес вводится в поле первой"
13091, " точки прерывания, напротив поля устанавливается флажок W. После чего нажимается кнопка"
13092, " Breakpoints, и адрес передается в контекст процесса. Можно переключится в игру, и изменить"
13093, " значение, потратив немного денег. Переключившись в окно отладчика можно увидеть, что найдено"
13094, " несколько адресов. Можно практически сразу определить искомый, для чего раскрываются все"
13095, " адреса, и просматривается характер изменения данных. Последние десять значений, которые"
13096, " записывает команда, находятся в узле ALL. Количество срабатываний команды в узле CNT.\n"
13097, "\n"
13098, "    После того как найден искомый адрес, можно посмотреть какие байты кода располагаются"
13099, " по этому адресу - сделать дамп памяти. Эти байты потом с помощью hview (qview) находятся"
13100, " в исполняемом файле, после чего просматривается дизассемблированный код программы.\n"
13101, "    Найденый адрес указывает на команду следующую за той которая изменяет или обращается к данным."
13102, " Поэтому нужно всего лишь проанализировать логику изменения данных, и исправить ее.\n"
13103, "   Типичный пример:\n"
13104, "   1. mov eax, [ds:087723h + edi]\n"
13105, "   2. sub eax, ecx\n"
13106, "   3. mov [ds:87723h + edi], eax\n"
13107, "   Команда что изменила значение денег находится на третьей строчке, а изменить лучше всего ту что"
13108, " находится на второй, например на \"add eax, ecx\", после чего игра будет вам справедливо"
13109, " доплачивать за каждую покупку ;-). Конечно если игра сетевая или разработчик постарался ее защитить"
13110, " так просто ничего не выйдет.\n"
13111, "   В отладчике есть дополнительные флажки:\n"
13112, "   Handle Events - заставляет обрабатывать исключения.\n"
13113, "   Останов - при срабатывании точки прерывания отладчик приостанавливает программу до нажатия"
13114, "   кнопки Run или Ctrl-F9.\n"
13115, "   Лог трассировки - при срабатывании точки прерывания в Messages записывается его адрес, и"
13116, "   содержимое регистров.\n"
13117, "\n"
13118, "   Вопросы и пожелания по работе отладчика отправляйте мне на мыло: alpet@hotmail.ru"
13119, "\n"
13120, "[end]"
13121, "\n"
13122, "[Чит-коды]"
13123, "\n"
13124, "    Быстрый ввод чит-кодов\n"
13125, "\n"
13126, "   Если нет желания запоминать и каждый раз вводить чит-коды, достаточно их описать в окне"
13127, " чит-кодов (открывается с первой вкладки, кнопкой \"Чит-коды\"). Переключившись в игре, в режим"
13128, " ввода чит-кода, нажми Win+F12 (можно переназначить), потом клавишу с номером чит-кода"
13129, " (1..9, на обычной, не цифровой части клавитуры) и он будет вставлен. В некоторых играх (типа Starcraft) для ввода чит-кода"
13130, " надо дважды нажать ENTER (до и после ввода), что-бы это делал wgc установите флажок AutoEnter.\n"
13131, " В строке чит кода могут быть следующие коммандные символы:\n"
13132, "  \\n - эмуляция нажатия ENER\n"
13133, "  \\t - эмуляция нажатия TAB\n"
13134, "  \\r - переключение на русскую раскладку\n"
13135, "  \\e - переключение на английскую раскладку\n"
13136, "  \\x??? - нажатие произвольной клавиши, с hex кодом ??. Первый полубайт означает:\n"
13137, "      1 - нажатие клавиши\n"
13138, "      2 - отпускание клавиши\n"
13139, "      3 - нажатие и отпускание клавиши\n"
13140, "  Например \\x35B - вызов меню Пуск.'\n"
13141, "\n"
13142, "[end]"
13143, "\n"
13144, "[Руководство читера]"
13145, "\n"
13146, "    Руководство взломщика\n"
13147, "\n"
13148, " 1. Поиск и изменение значений\n"
13149, "\n"
13150, " 1.1 Выбор процесса."
13151, "\r\n"
13152, "   На первой вкладке программы, надо выбрать окно которое наиболее подходит к игре которую вы собираетесь взломать. Достаточно щеклнуть это окно в списке мышью и вы попадаете"
13153, " на вкладку \"2. Поиск и отсев\"\n"
13154, "\r\n"
13155, " 1.2 Поиск и отсев значений\n"
13156, "\n"
13157, "   "
13158, " Для начала в игре узнаем нужное значение (образец поиска), и переходим в WGC."
13159, " Это значение следует поместить в поле \"min\". Правее этого поля находится кнопка выбора"
13160, " алгоритма поиска/отсева.\n"
13161, " Если кликнуть ее правой кнопкой мышы, развернется меню вариантов поиска/отсева\n"
13162, "  Варианты поиска известных чисел.\n"
13163, "   \">\"   Поиск числа больше, чем образец\n"
13164, "   \"<\"   Поиск числа меньше, чем образец\n"
13165, "   \"=\"   Поиск числа равного образцу\n"
13166, "   \">=\"   Поиск числа не меньше, чем образец\n"
13167, "   \"<=\"   Поиск числа не больше, чем образец\n"
13168, "   \"<>\"   Поиск числа не равного образцу\n"
13169, " Варианты поиска неизвестного значения (подменю).\n"
13170, "\n"
13171, "   \"?\"    - Значение не изменилось\n"
13172, "   \"+\"    - Значение увеличилось\n"
13173, "   \"-\"    - Значение уменьшилось\n"
13174, "   \"+-\"   - Значение изменилось\n"
13175, "   \"+=\"   - Значение возможно увеличилось\n"
13176, "   \"-=\"   - Значение возможно уменьшилось\n"
13177, "\n"
13178, "   Для поиска уже известного значения выбираем \"=\".\n"
13179, " Правее поля max находится кнопка выбора типа значения, у нее таким же способом открывается"
13180, " меню типов значения. Возможен поиск следующих типов:\n"
13181, " BYTE - целое число от 0 до 255 или от -128 до 127\n"
13182, " WORD - целое число от 0 до 65536 или от -32768 до 32767\n"
13183, " DWORD - целое число от 0 до 1^32 или от -1^31 до (1^31-1) 1^32= 4294967296\n"
13184, " TEXT - строка однобайтных символов\n"
13185, " WIDE - строка символов UNICODE\n"
13186, " SINGLE - вещественное (с плавающей запятой) число одинарной точности (4-байта)\n"
13187, " REAL - вещественное число 6-байт\n"
13188, " DOUBLE - вещественное число двойной точности (8-байт)\n"
13189, " EXTENDED - вещественное число расширенной точности (10-байт)\n"
13190, " ALL - число неизвестного типа (поиск сразу по нескольким типам)\n"
13191, "   В большинстве игр используются целые числа, поэтому можно выбрать тип DWORD или WORD (Однобайтные значения\n"
13192, " встречаются редко).\n"
13193, "   Когда выбрано условие поиска и тип искомых значений - нажимаем \"Поиск\". Надпись \"Готов\""
13194, " на некоторое время сменится на \"Работа\", а когда вернется в исходное состояние в списке"
13195, " запросов будет отражаться количество найденых адресов, если конечно что-то найдено, в"
13196, " противном случае надо попытаться изменить тип значения или условия поиска.\n"
13197, "    Если найдено много адресов (>5) в игре нужно изменить искомое значение"
13198, " (например потратить взламываемый ресурс). Возвратившись в программу изменяем значение образца (min)"
13199, " чтобы оно соответсвовало текущему значению в игре (это можно сделать одной мышью, наведя курсор"
13200, " на значение и подкручивая колесо, если при этом удерживать левую кнопку значение будет изменяться"
13201, " на 10 * Dx) и нажимаем \"Отсев\". После этого шага количество найденых значений должно существенно"
13202, " уменьшится - поэтому продолжаем его до тех пор это количество не прекратит уменьшаться, или не"
13203, " обратиться в ноль. Если после отсевов сохранилось несколько значений, их нужно передать в"
13204, " следующую вкладку нажав кнопку >>.\n"
13205, " \n"
13206, "   Переходим к следующей вкладке \"3. Cheat\". Отсюда можно изменять и замораживать найденые"
13207, " значения. Нужное вам значение поместите в столбце \"cheat\" и строке которая соответствует"
13208, " найденому адресу, если найдено не одно значение используйте несколько разных - в игре"
13209, " проявится единственное. Для того чтобы значения перезаписались достаточно нажать Cheat\n."
13210, "   Можно использовать суффиксы для больших чисел:\n"
13211, "   h - добавляет 2 нуля, например 1h = 100\n"
13212, "   t - добавляет 3 нуля, например 2t = 2000\n"
13213, "   m - добавляет 6 нулей, например 1m = 100000\n"
13214, "   b - добавляет 9 нулей, например 1b = 1000000000\n"
13215, "   Суффиксы ставятся в конце или середине числа.\n  "
13216, "   Вышеописаная методика проста и универсальна для всех взломщиков игр, непозволяет однако работать"
13217, " с зашифрованными значениями. В некоторых случаях помогает поиск {неизвестного значения}."
13218, "   Но бывает когда значение прекрасно находится, но изменить его никак нельзя. Для этих и"
13219, " аналогичных случаев и требуется моя программа.  При всем при этом хочу сразу предупредить - Wgc"
13220, " сам ничего за вас не взломает, он только найдет места в программе откуда изменяется значение.\n"
13221, "   Что бы взломать этот код придется использовать специальные программки, вроде HVIEW (я сам пользую"
13222, " qview). Также нужны хотя-бы базовые знания взломщика, знание ассемблера x86 обязательно.\n"
13223, "   Как осуществить сложный взлом смотрите в разделе \"Использование Отладчика\".\n"
13224, "[end]"
13225, "\n                                                                                "
13226, "HELPISEND"
END
