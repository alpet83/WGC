.586
PAGE 255, 255
locals
.model flat, STDCALL

data                    segment public ".DATA"
align 16                ; выровненые данные
mutix                   dd              0
temp                    dd              16 dup (0)
pshift                  dd              0
savesp                  dd              ?
savebp                  dd              ?
srcptr                  dd              0

extrn                   pascal sdw:DWORD                ; Функция
                        ; Данные результата, посути структура
include                 extvars.inc

data                    ends


.code

                        nn = 0
                        nc = 0
;---------------------- --------------
include                 fscan.inc
COPYDW                  MACRO   reg, o1, o2
                        mov                     reg, [esi + x + o1]
                        mov                     temp [x + o2], reg
                        ENDM
;---------------------- --------------
AlignDS                 proc
                        pushad
                        mov                     ebx, offset ScanDwords
                        mov                     ecx, offset ScanEnd
                        mov                     esi, ecx        ; исходный адрес
                        mov                     edi, ecx        ; адрес назначения
                        sub                     ecx, ebx        ; количество байт
                        inc                     ecx
                        and                     bl, 0E0h;
                        add                     bl, 20h         ; новый адрес начала функции
                        mov                     eax, ebx
                        sub                     eax, offset ScanDwords ; смещение функции
                        mov                     pshift, eax
                        add                     edi, eax        ; адрес назначения + shift
                        std
                        rep                     movsb           ; перемещение функции
                        mov                     sdw, ebx        ; возвратить новый адрес
                        popad
                        cld
                        ret
                        endp
;---------------------- ----------------------- ---------------------------
; Инициация динамического кода и переменных
InitDS                  proc
                        push                    eax
                        mov                     al, setOP
                        nm = 0;
                        
                        ; МОДИФИКАЦИЯ 96-х SETCC КОММАНД
                        REPT                    3Fh
                        setscc                  %nm
                        nm = nm + 1
                        ENDM

                        pop                     eax
                        ret


                        db                      16 dup (90h) ; protection
InitDS                  endp

;---------------------- ----------------------- ---------------------------
ScanDWORDS              proc  buff:DWORD, rslt:DWORD, bsize:DWORD
                        ; Loading buffer info
                        pushad
                        mov                     ecx, bsize
                        mov                     esi, buff       ; Предел по данным
                        test                    [esi], ecx      ; условный префетч
                        mov                     srcptr, esi
                        mov                     edi, rslt
                        add                     ecx, esi        ; послед. адрес
                        mov                     savebp, ebp     ; Сохранение ebp
                        mov                     eax, offset dcode010
                        add                     eax, pshift
                        mov                     edx, dword ptr [eax + 02]
                        cmp                     edx, ecx
                        je                      no_corr
                        mov                     dword ptr [eax + 02], ecx ; Модификация кода
                        mov                     dword ptr [edi + 04h], 0
                        mov                     dword ptr [edi + 0Ch], 0

no_corr:
                        mov                     savesp, esp
                        xor                     ebp, ebp
                        xor                     edx, edx
                        mov                     esp, dword ptr [ExampleMin]
;---------------------- ----------------------- ---------------------------

                        nn = 0

scan:
                        mov                     ecx, [esi + 20h] ; префетч+копирование
;---------------------- ----------------------- ---------------------------
                        ; Начало сравнений
                        X = 0
                        REPT                    2
                        N = X

                         REPT                    4
                         ; test four vals [X + 00h..03h,08..0Ch] without missaligns
                         Compset                 a, N
                         OFS = N + 10h
                         ; test four vals [X + 10h..13h,18..1Ch] without missaligns
                         Compset                 c, OFS
                         N = N + 1
                         ENDM
                        ; shifting values in banks -4
                        copydw                  ebx, 04h, 00h
                        copydw                  edx, 08h, 04h

                        copydw                  ebx, 0Ch, 08h
                        copydw                  edx, 10h, 0Ch

                        ; test next order values
                         REPT                   4
                         N = X
                        ; test four vals [X+ 04h..07h,0C..0Fh] without missaligns
                         cmp                     temp [N + 00h], esp ;
                         regst                   %nn, a
                        ; test four vals [X+ 14h..17h,1C..1Fh] without missaligns
                         cmp                     temp [N + 10h], esp
                         regst                   %nn, c
                         N = N + 1
                         ENDM
                        X = X + 8               ; BANK SKIPPING
                        ENDM   ; IN
;---------------------- ----------------------- ---------------------------
                        shr                     eax, 16           ; =>> 16 low bits
; ДОУПАКОВКА МНОЖЕСТВ --------------------------------------------------
                        add                     esi, 20h   ; Наращивание указателя src 1
                        mov                     cx, ax    ; Терепь eax свободен, а ecx забит
;---------------------- ----------------------- --------------------------
                        xor                     eax, eax
                ; инвертирование по соглашению, побыстрее чем not, т.к инструкция парится
                        xor                     ecx, -1
;---------------------- ----------------------- ---------------------------
                        ; RLE PACKING
                        ; Проверка множеств
                        cmp                     [edi], ecx
                        mov                     [edi + 4], ebx
                        jne                     nsave
;---------------------- ----------------------- ---------------------------
                        ; смещение указателя элементов
                        add                     edi, 8
                        ; cохранение множества
                        xor                     ebx, ebx
                        mov                     dword ptr [edi], ecx
                        ; инкремент счетчика
nsave:
                        inc                     ebx
;---------------------- ----------------------- ---------------------------
dcode010:
                        cmp                     esi, 12345678h
                        ; сброс счетчика след. элемента = 1
                        mov                     [edi + 4], ebx
                        mov                     [edi + 0Ch], eax

                        jb                      scan
                        ;// Context restoring
endscan:
                        xor                     eax, eax
                        mov                     ebp, savebp
                        mov                     esp, savesp   ; Восстановление esp перед вызовом
                        mov                     esi, rslt
                        xor                     eax, eax        ; очистка eax
                        cmp                     dword ptr [edi], 0
                        setne                   al              ; Последние множества - не нулевые
                        shl                     al, 3           ; 8 байт - размер элемента
                        add                     edi, eax        ; добавление к пределу = размер
                        sub                     edi, esi        ; -= @rslt
                        shr                     edi, 3
                        ; Кол-во элементов (по 8 байт) архива
                        mov                     _isize, 8
                        mov                     _lcount, edi
                        mov                     _packalg, RLESET
                        popad                                   ; восстановление регистров
                        ret
                        ; Для смещения однако
ScanEnd:
                        db                      1024 dup (90h)
                        endp                    ; ScanDWORDS
;---------------------- ----------------------- ---------------------------
SieveDWORDS             proc                    buff:DWORD, setlst:DWORD, dst:DWORD, count:DWORD
; На входе только 32-битные множества (+ кол-во) 
; индексация осуществляется: esi@buff, ebx@setlst (src), edi@setlst(dst)
; данные в setlst - не сжаты, поэтому после пользования затираются
                        pushad
                        mov                     ebx, setlst       ; исходный архив
                        mov                     esi, buff
                        mov                     edi, dst          ; назначение (2-ная упаковка)
                        ; кол-во элементов списка множеств
                        mov                     ecx, count
                        shl                     ecx, 2          ; * 4, кол-во в размер    
                        add                     ecx, ebx          ; предел
                        mov                     dword ptr [dcode011+2], ecx
                        mov                     savesp, esp
                        mov                     savebp, ebp
                        mov                     esp, dword ptr [exampleMin]   ;; загрузка образца
                        xor                     ebp, ebp                      ;; обнуление счетчика
                        mov                     dword ptr [edi + 4], ebp
                        mov                     dword ptr [edi + 12], ebp      ;; инициация
;---------------------- ----------------------- ---------------------------
sieve:
                        test                    byte ptr [esi + 40h],1
                        ; получение множества методами поиска
                        ; за итерацию проверяется 32 значения
                        n = 1
                        Compset                 a, 00h, 0, 9
                        Compset                 c, 10h, 0, 9

                        REPT                    14
                        ; не оптимизированный код
                        Compset                 a, n, 1, 1
                        o = n + 10h
                        Compset                 c, o, 1, 1
                        n = n + 1
                        ENDM
                        Compset                 a, 0Fh, 1, 0  ; без сдвигов
                        Compset                 c, 1Fh, 1, 0

                        ; в eax и ecx по 16 бит множеств
                        shr                     eax, 8
                        shl                     ecx, 8
                        ; совмещение множеств в ecx
                        mov                     cx, ax ; теперь в ecx - 32 битное множество
                        ; отсев результатов
                        and                     ecx, dword ptr [ebx]
                        xor                     eax, eax
                        add                     esi, 20h        ; cмещ. указателя данных
                        add                     ebx, 4          ; смещ. указателя источника
                        cmp                     dword ptr [edi], ecx
                        setne                   al
                        ; определение указателя
                        lea                     edi, [edi + eax * 8]
                        ; сохранение множества
                        mov                     dword ptr [edi], ecx
                        ; инкремент счетчика
                        add                     word ptr [edi + 4], 1
                        ; предварительная инициация счетчика
                        mov                     word ptr [edi + 12], 0
;---------------------- ----------------------- ---------------------------
dcode011:
                        cmp                     ebx, 12345678h
                        jb                      sieve
                        xor                     eax, eax
                        ; сохранение последнего множества и счетчика
                        mov                     dword ptr [edi + 0], ecx
                        mov                     dword ptr [edi + 4], ebp
                        cmp                     ecx, 0
                        setne                   al
                        shl                     eax, 3          ; * 8
                        add                     edi, eax
                        ; восстановление стековых указателей
                        mov                     ebp, savebp
                        mov                     esp, savesp
                        mov                     esi, rslt
                        sub                     edi, dst
                        shr                     edi, 3          ; div 8
                        ; размер элемента архива
                        mov                     _isize, 8
                        ; кол-во элементов архива
                        mov                     _lcount, edi
                        mov                     _packalg, RLESET 
                        popad
                        ret             
                        endp                    ; SieveDWORDS
;---------------------- ----------------------- ---------------------------

public                  ScanDWORDS
public                  SieveDWORDS
public                  InitDS
public                  AlignDS
;---------------------- ----------------------- ---------------------------
END
